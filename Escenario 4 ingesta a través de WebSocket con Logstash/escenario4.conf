# SECCION DE ENTRADA DE DATOS
input {
  # Puerto al que el script manda la informacion
  http {
    port => 8080
  }
}

# SECCION DE FILTRADO DE DATOS
filter {

  json {
    source => "message"
  }

  # Se borra el campo TradeConditions del mensaje final
  mutate {
    remove_field => ["data.TradeConditions"]
  }

  # Transformacion del tipo de los campos
  mutate {
    convert => {
      "LastPrice" => "float"
      "Timestamp" => "integer"
      "Volume" => "float"
    }
  }

# Generacion de un nuevo campo en funcion de otros dos
ruby {
  code => '
    data = event.get("data")
    puts "Original data: #{data}"
    data.each { |item|
      total_price = item["LastPrice"] * item["Volume"]
      puts "Calculando el precio total del item: #{item}"
      puts "LastPrice: #{item["LastPrice"]}, Volume: #{item["Volume"]}"
      item["TotalPrice"] = total_price
      puts "TotalPrice: #{total_price}"
    }
    event.set("data", data)
  '
}
  
}

# SECCION DE SALIDA DE DATOS
output {
  # Primera salida por pantalla de la terminal
  stdout {}
  # Segunda salida hacia el servidor de ElasticSearch
  elasticsearch {
    hosts => ['localhost:9200']
    index => "test-data-stream"
    user => elastic
    password => elastic
    action => "create"
  }
}
