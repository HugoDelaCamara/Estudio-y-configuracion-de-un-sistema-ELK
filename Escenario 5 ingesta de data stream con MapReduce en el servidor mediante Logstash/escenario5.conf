# SECCION DE ENTRADA DE DATOS
input {
  file {
    # Ruta al archivo que contiene al informacion
    path => "C:/Users/hugod/Desktop/TFG/ficheros/escenario5.log"
    start_position => "beginning"
    codec => "json"
  }
}

# SECCION DE FILTRADO DE DATOS
filter {
    # Funcion que realiza el MapReduce
    aggregate {
        # Se toma como referencia el campo del metodo de pago
        task_id => "%{payment_method}"
        code => "
        map['payment_method'] = event.get('payment_method')
        map['total_amount'] ||= 0
        map['total_amount'] += event.get('amount')
        "
        push_map_as_event_on_timeout => true
        timeout_task_id_field => "payment_method"
        # Cada 20 segundos se vuelve a realizar MapReduce a los datos
        timeout => 20
        # Si en 40 segundos no ha habido actualizaciones, se detiene
        inactivity_timeout => 40
    }
}

# SECCION DE SALIDA DE DATOS
output {
  # Primera salida al servidor ElasticSearch
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "transactions_aggregate2"
    document_id => "%{payment_method}"
    action => "create"
  }

  # Segunda salida por pantalla de terminal
  stdout {
    codec => rubydebug
  }
}
